AWSTemplateFormatVersion: 2010-09-09
Parameter:
  ProjectName:
    Type: String
  MicroServiceName:
    Type: String
  AppName:
    Type: String
  PrivateSubnetOne:
    Type: String
  PrivateSubnetTwo:
    Type: String
  ExportPortinDockerfile:
    Type: String
  ListenerPort:
    Type: String
  

Resources:
####################
# LoadBalancer NLB #
####################
  LoadBalancerNLBAppName:
    Type: AWS::ElasticLoadBalancerV2::LoadBalancer
    Properties:
      Name: !Sub "nlb-${AppName}"
      Type: network
      Scheme: internal
      Subnets:
      - Ref: PrivateSubnetOne
      - Ref: PrivateSubnetTwo
      Tags:
      - Key: 
        Value:

###################################################################################################
# Pode ser criado junto da infra do container - TargetGroup e amarração do TG e ALB pelo Listener #
###################################################################################################
  TargetGroupNlbAppName:
    Type: AWS::ElasticLoadBalancerV2::TargetGroup
    Properties:
      Port: !Ref ExportPortinDockerfile
      Protocol: TCP
      TagetType: ip
      TargetGroupAttributes:
      - Key: desregistration_delay.timeout_seconds
        Value: '5'
      Tags:
      - Key: TG Name
        Value: !Sub "tg-${AppName}"

  ListenerNlbAppName:
    Type: AWS::ElasticLoadBalancerV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroupNlb
      LoadBalancerArn: !ImportValue
        'Fn::Sub': 'Stack-Infra-${ProjectName}-${MicroServiceName}-ArnNLBAppName'
      Port: !Ref ListenerPort
      Protocol: TCP


###############################
# LogGroup MetricFilter Alarm #
###############################
  CloudWatchGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${ProjectName}-${MicroServiceName}"
      RetentionInDays: 7

  404MetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Sub "${ProjectName}-${MicroServiceName}"
      FilterPattern: "[ip, identity, user_id, timestamp, request, status_code = 404, size, ...]"
      MetricTrTransformations:
      - MetricValue: '1'
        MetricNamespace: !Sub "${ProjectName}-${MicroServiceName}/404s"
        MetricName: !Sub "${ProjectName}-${MicroServiceName}/404Count"
    DependsOn: CloudWatchGroup
  
  404Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "Alarm-${ProjectName}-${MicroServiceName}-404s"
      AlarmDescription: "Alarm Description"
      MetricName: !Sub "${ProjectName}-${MicroServiceName}/404Count"
      Namespace: !Sub "${ProjectName}-${MicroServiceName}/404s"
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      AlarmActions:
        - '{{resolve:ssm:/org/member/workload_local_sns_arn:1}}'
      OKActions:
        - '{{resolve:ssm:/org/member/workload_local_sns_arn:1}}'
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
    DependsOn: 404MetricFilter

###########
# Outputs #
###########
Outputs:
  TGAppName:
    Description: ARN do LoadBalancer
    Value: !Ref LoadBalancerNLB
    Export:
      Name: !Sub "${AWS::StackName-ArnNLBAppName}"