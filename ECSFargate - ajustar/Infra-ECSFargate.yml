AWSTemplateFormatVersion: 2010-09-09
Parameter:
  ProjectName:
    Type: String
  MicroServiceName:
    Type: String
  AliasName:
    Type: String
  KMSType:
    Type: String

Resources:
#############################
# LoadBalancer and Listener #
#############################
  MyKey:
    Type: 'AWS::KMS::Key'
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
        - Sid: Allow administration of the key
          Effect: Allow
          Principal:
            AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
          Action: 'kms:*'
          Resource: '*'
          Condition:
            StringEquals:
              'kms:CallerAccount': !Ref 'AWS::AccountId'
        - Sid: Allow user of the key
          Effect: Allow
          Principal:
            AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
          Action:
          - 'kms:Encrypt'
          - 'kms:Decrypt'
          - 'kms:ReEncrypt*'
          - 'kms:GenerateDataKey'
          - 'kms:DescribeKey'
          Resource: '*'
        - Sid: Allow Attachment of persistent resource
          Effect: Allow
          Principal:
            AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
          Action:
          - 'kms:CreateGrant'
          - 'kms:ListGrants'
          - 'kms:RevokeGrant'
          Resource: '*'
          Condition:
            StringEquals:
              'kms:GrantIsForAWSResource': 'true'
      Tags:
      - Key: 'kms_type'
        Value: !Ref KMSType

  KMSKeyAlias:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Join
        - "-"
        - - !Sub 'alias/${AliasName}'
      TargetKeyId: !Ref MyKey

  KMSARNID:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        source:
        - 'aws.kms'
        resource:
        - !GetAtt MyKey.Arn    

###############################
# LogGroup MetricFilter Alarm #
###############################
  CloudWatchGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "${ProjectName}-${MicroServiceName}"
      RetentionInDays: 7

  404MetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Sub "${ProjectName}-${MicroServiceName}"
      FilterPattern: "[ip, identity, user_id, timestamp, request, status_code = 404, size, ...]"
      MetricTrTransformations:
      - MetricValue: '1'
        MetricNamespace: !Sub "${ProjectName}-${MicroServiceName}/404s"
        MetricName: !Sub "${ProjectName}-${MicroServiceName}/404Count"
    DependsOn: CloudWatchGroup
  
  404Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "Alarm-${ProjectName}-${MicroServiceName}-404s"
      AlarmDescription: "Alarm Description"
      MetricName: !Sub "${ProjectName}-${MicroServiceName}/404Count"
      Namespace: !Sub "${ProjectName}-${MicroServiceName}/404s"
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      AlarmActions:
        - '{{resolve:ssm:/org/member/workload_local_sns_arn:1}}'
      OKActions:
        - '{{resolve:ssm:/org/member/workload_local_sns_arn:1}}'
      ComparisonOperator: GreaterThanThreshold
      TreatMissingData: notBreaching
    DependsOn: 404MetricFilter

###########
# Outputs #
###########
Outputs:
  KeyArn:
    Description: ARN KMS
    Value: !GetAtt 'MyKey.Arn'
    Export:
      Name: !Sub "${AWS::StackName}-KeyArn"